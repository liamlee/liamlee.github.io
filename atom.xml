<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Liamming</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://liamlee.github.io/"/>
  <updated>2016-12-26T08:04:12.000Z</updated>
  <id>https://liamlee.github.io/</id>
  
  <author>
    <name>Ming</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hue 安装配置</title>
    <link href="https://liamlee.github.io/2016/12/26/Hue-Install/"/>
    <id>https://liamlee.github.io/2016/12/26/Hue-Install/</id>
    <published>2016-12-26T07:37:29.000Z</published>
    <updated>2016-12-26T08:04:12.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h3><pre><code>* JDK
* Maven
* Git（用于从github下载Hue）     
* 库包依赖：参考Hue的githu主页 [Hue](https://github.com/cloudera/hue) 所列的所有依赖，一一检查安装
* 集群嘛，当然我认为你已经搭建好了
</code></pre><hr>
<h3 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h3><pre><code>git clone https://github.com/cloudera/hue.git (brach)
cd hue
make apps
</code></pre><p>make过程时间会比较长，只要前面所提的依赖都已安装好，整个过程一般不会出现错误，耐心等待即可</p>
<h3 id="初步验证"><a href="#初步验证" class="headerlink" title="初步验证"></a>初步验证</h3><ul>
<li>在后台启动服务 <code>build/env/bin/hue runserver</code></li>
</ul>
<ul>
<li>访问<a href="http://localhost:8000。正常情况，前台出现登录界面。" target="_blank" rel="external">http://localhost:8000。正常情况，前台出现登录界面。</a></li>
</ul>
<ul>
<li>Hue初始界面没有用户注册选项，直接根据用户的的输入创建第一个超级用户，后续建立用户分配权限都依赖该用户，所以需要特别注意，务必记住自己输入了什么。</li>
</ul>
<hr>
<h3 id="配置Hue"><a href="#配置Hue" class="headerlink" title="配置Hue"></a>配置Hue</h3><p>在完成安装和初步验证后，现在进入最重要也是最复杂的步骤，配置。Hue支持Hadoop生态系统中的各种组建，比如访问HDFS文件、执行SQL查询HBase中的表、编写notebook来运行spark，前提是要做好对应的配置。</p>
<p><strong>配置文件</strong><br>从github下载的开发版，配置文件为 <code>desktop/conf/pseudo-distributed.ini</code> ,如果是其他发行版请参考 <a href="http://gethue.com/how-to-configure-hue-in-your-hadoop-cluster/" target="_blank" rel="external">官方文档</a> 。</p>
<h4 id="Hive"><a href="#Hive" class="headerlink" title="Hive"></a>Hive</h4><pre><code>[beeswax]
  # Host where HiveServer2 is running. 
    #如果Hue与Hive不在同一台服务器，需要修改指定正确的Hive服务主机.
  hive_server_host=localhost
</code></pre><p>有些朋友说“我从来不用Hive”，但是Hue执行交互式SQL查询是通过Hive完成的，所以还是建议乖乖的安装配置好Hive在你的集群中吧，至于怎么安装Hive不在此赘述。</p>
<h4 id="HDFS"><a href="#HDFS" class="headerlink" title="HDFS"></a>HDFS</h4><p>首先修改Hadoop配置文件，增加WebHDFS功能，支持通过web访问HDFS</p>
<ul>
<li><p>hdfs-site.xml </p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.webhdfs.enabled<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>core-site.xml</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.proxyuser.hue.hosts<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">value</span>&gt;</span>*<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.proxyuser.hue.groups<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">value</span>&gt;</span>*<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ul>
<p>然后对接Hue配置，如果Hue与NameNode在同一台机器，保持默认即可。</p>
<pre><code>[[hdfs_clusters]]
    # HA support by using HttpFs
    [[[default]]]
      # Enter the filesystem uri
      fs_defaultfs=hdfs://node1:8020

      # Use WebHdfs/HttpFs as the communication mechanism.
      # Domain should be the NameNode or HttpFs host.
      # Default port is 14000 for HttpFs.
       webhdfs_url=http://node1:50070/webhdfs/v1
</code></pre><p>另外一点需特别注意的，为了获取HDFS访问权限，务必指定Hadoop用户</p>
<pre><code># This should be the hadoop cluster admin
   default_hdfs_superuser=your-user
</code></pre><h4 id="Yarn"><a href="#Yarn" class="headerlink" title="Yarn"></a>Yarn</h4><p>监控Job，需要配置ProxyServer 和 Job History servers。<br>首先，Hadoop侧的配置修改</p>
<ul>
<li><p>mapred-site.xml (<em>Job History servers</em>)</p>
<pre><code>&lt;property&gt;
    &lt;name&gt;mapreduce.jobhistory.webapp.address&lt;/name&gt;
    &lt;value&gt;${your-host}:19888&lt;/value&gt;
&lt;/property&gt;
</code></pre><p>启动Job History server服务</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mr-jobhistory-daemon<span class="selector-class">.sh</span> start historyserver</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>yarn-site.xml (<em>ProxyServer</em>)</p>
<figure class="highlight dust"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span></div><div class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.webapp.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>$<span class="template-variable">&#123;your-host&#125;</span><span class="xml">:8088<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span></div><div class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.web-proxy.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>$<span class="template-variable">&#123;your-host&#125;</span><span class="xml">:8888<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span></div><div class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></div></pre></td></tr></table></figure>
<p>启动ProxyServer服务    </p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yarn-daemon<span class="selector-class">.sh</span> start proxyserver</div></pre></td></tr></table></figure>
</li>
</ul>
<p>对接Hue配置</p>
<pre><code>[hadoop]
  [[yarn_clusters]]
    [[[default]]]
      # Enter the host on which you are running the ResourceManager
      resourcemanager_host=your-host     

      # Whether to submit jobs to this cluster
      submit_to=True

      # URL of the ResourceManager API
      resourcemanager_api_url=http://your-host:8088

      # URL of the ProxyServer API
      proxy_api_url=http://your-host:8088

      # URL of the HistoryServer API
      history_server_api_url=http://your-host:19888
</code></pre><p>好了，现在你可以Job Browser浏览所有运行的Job并查看日志。</p>
<h4 id="HBase"><a href="#HBase" class="headerlink" title="HBase"></a>HBase</h4><p>HBase配置相对简单，只要指定HBase服务的host即可</p>
<pre><code>[hbase]
# Comma-separated list of HBase Thrift server 1 for clusters in the format of
 &apos;(name|host:port)&apos;.
 hbase_clusters=(Cluster|your-host:9090)
</code></pre><p>然后，务必记得在HMaster所在主机启动Thrift服务<br>    hbase thrift start &amp;</p>
<h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><p>更新中……</p>
<hr>
<h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><ol>
<li><a href="http://gethue.com/how-to-configure-hue-in-your-hadoop-cluster/" target="_blank" rel="external">how-to-configure-hue-in-your-hadoop-cluster</a></li>
<li><a href="https://github.com/cloudera/hue" target="_blank" rel="external">Hue-Github</a></li>
<li><a href="http://livy.io/quickstart.html" target="_blank" rel="external">Livy, an Open Source REST Service for Apache Spark</a> </li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;基础&quot;&gt;&lt;a href=&quot;#基础&quot; class=&quot;headerlink&quot; title=&quot;基础&quot;&gt;&lt;/a&gt;基础&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;* JDK
* Maven
* Git（用于从github下载Hue）     
* 库包依赖：参考Hue的githu主页 
    
    </summary>
    
    
      <category term="大数据" scheme="https://liamlee.github.io/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="Hue" scheme="https://liamlee.github.io/tags/Hue/"/>
    
  </entry>
  
  <entry>
    <title>读《嫌疑人X的献身》</title>
    <link href="https://liamlee.github.io/2016/11/08/read-xianyirenXdexianshen/"/>
    <id>https://liamlee.github.io/2016/11/08/read-xianyirenXdexianshen/</id>
    <published>2016-11-08T15:04:22.000Z</published>
    <updated>2016-11-14T06:01:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>富㭴慎二：一个看似成功的汽车销售，其实是利用职务之便挥霍公款，出手阔错。追求到花岗靖子，组成了一个看似美满的家庭。东窗事发后，被公司开除，露出了游手好闲的本性，变成一个吃软饭的无赖，离婚后还阴魂不散的缠着花岗靖子。</p>
<p>花岗靖子：一个带着不算小魅力的单身女人，两度婚姻失败，原本在酒廊做陪酒女，为躲避恶棍一般的前夫，带着女儿离开原来的地方，来到朋友小代子的便当店里帮忙。她的到来，石神多了个邻居，石神有了活着的新意义。也因为她的不得已错手杀了前来纠缠的前夫，把石神带入了一条不归路。</p>
<p>石神哲哉：一个数学天才，有着强大的逻辑能力，无奈造化弄人，只能做一个高中数学老师，默默无闻的活着，甚至有过不愿意继续活着的念头。当新来的邻居靖子过来打招呼的时候，石神立即就被深深的吸引住了，似乎有了继续活下去的理由了，以至于在靖子犯下命案的时候，第一时间就出手相助，并在必要的时候献身自己。石神处理了富㭴慎二的尸体，极其隐秘的处理了；石神在第二天制造了另一起命案，杀了一个流浪汉，并直接暴露其尸体；石神制造一系列明显的又模糊的线索，并通过例外的请假制造自己无法证明的不在场证明；石神给靖子想好一系列的对付盘问的话语和方法。最后石神在汤川的识破后献身了自己。</p>
<p>草薙俊平： 一个能力不算差的刑侦警察，陷入了石神为靖子制造的完美的不在场证明里面，只能一次次的求助汤川。</p>
<p>汤川：一个物理学教授。与石神、草薙同毕业于帝都大学，与石神互相欣赏、心心相惜，可以说是石神唯一的朋友。有着聪明的头脑，经常协助警方办理疑难杂案。由于对石神有着深入的了解，通过石神的行为细节推测出了石神参与靖子杀人案的动机和切入点，并随着深入的调查被石神的献身精神深深震惊。他完全理解石神，但对老友将要深陷囵圄、才华凋谢感到惋惜、痛心。</p>
<p>花冈美里：一个两度婚姻失败女人的孩子，对成年男子心存畏惧、不信任，但应该是信任石神的。或者正是美里最后的割腕自杀行为，让靖子突破了自我保护的最后防线，走进了警局。</p>
<p>最后：石神是不是真的是一个变态，我选择相信不是。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;富㭴慎二：一个看似成功的汽车销售，其实是利用职务之便挥霍公款，出手阔错。追求到花岗靖子，组成了一个看似美满的家庭。东窗事发后，被公司开除，露出了游手好闲的本性，变成一个吃软饭的无赖，离婚后还阴魂不散的缠着花岗靖子。&lt;/p&gt;
&lt;p&gt;花岗靖子：一个带着不算小魅力的单身女人，两度
    
    </summary>
    
    
      <category term="东野圭吾" scheme="https://liamlee.github.io/tags/%E4%B8%9C%E9%87%8E%E5%9C%AD%E5%90%BE/"/>
    
      <category term="读万卷书" scheme="https://liamlee.github.io/tags/%E8%AF%BB%E4%B8%87%E5%8D%B7%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://liamlee.github.io/2016/10/19/hello-world/"/>
    <id>https://liamlee.github.io/2016/10/19/hello-world/</id>
    <published>2016-10-19T05:22:14.000Z</published>
    <updated>2016-10-19T05:22:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
